(function() {var implementors = {};
implementors["airbrush"] = [{"text":"impl StructuralPartialEq for Droplet","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Distribution","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for RenderConfig","synthetic":false,"types":[]},{"text":"impl&lt;P&gt; StructuralPartialEq for Renderer&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for WorldSpace","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for CanvasSpace","synthetic":false,"types":[]}];
implementors["bytemuck"] = [{"text":"impl StructuralPartialEq for PodCastError","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl StructuralPartialEq for BigEndian","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for LittleEndian","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; StructuralPartialEq for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; StructuralPartialEq for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; StructuralPartialEq for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for RecvError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TryRecvError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TrySelectError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SelectTimeoutError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TryReadyError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ReadyTimeoutError","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; StructuralPartialEq for Steal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; StructuralPartialEq for CachePadded&lt;T&gt;","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl StructuralPartialEq for Compression","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SpecialOptions","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for CompressionOptions","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for MatchingType","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; StructuralPartialEq for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["euclid"] = [{"text":"impl&lt;T&gt; StructuralPartialEq for Angle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; StructuralPartialEq for RigidTransform3D&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for BoolVector2D","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for BoolVector3D","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for UnknownUnit","synthetic":false,"types":[]}];
implementors["gif"] = [{"text":"impl StructuralPartialEq for DisposalMethod","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Block","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for AnyExtension","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Extension","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Extensions","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ColorOutput","synthetic":false,"types":[]}];
implementors["image"] = [{"text":"impl StructuralPartialEq for UnsupportedErrorKind","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ParameterErrorKind","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for LimitErrorKind","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ImageFormatHint","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Rect","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for FilterType","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SampleLayout","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Error","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for NormalForm","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for DXTVariant","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Rgbe8Pixel","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for PixelDensityUnit","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for PixelDensity","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for CompressionType","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for FilterType","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SampleEncoding","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for PNMSubtype","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Delay","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Pixel, Container&gt; StructuralPartialEq for ImageBuffer&lt;P, Container&gt;","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ColorType","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ExtendedColorType","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive&gt; StructuralPartialEq for Rgb&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive&gt; StructuralPartialEq for Bgr&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive&gt; StructuralPartialEq for Luma&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive&gt; StructuralPartialEq for Rgba&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive&gt; StructuralPartialEq for Bgra&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive&gt; StructuralPartialEq for LumaA&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ImageFormat","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ImageOutputFormat","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Progress","synthetic":false,"types":[]}];
implementors["jpeg_decoder"] = [{"text":"impl StructuralPartialEq for PixelFormat","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ImageInfo","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl StructuralPartialEq for CompressionStrategy","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TDEFLFlush","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TDEFLStatus","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for CompressionLevel","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TINFLStatus","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for MZFlush","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for MZStatus","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for MZError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for DataFormat","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for StreamResult","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; StructuralPartialEq for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl StructuralPartialEq for ParseRatioError","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl StructuralPartialEq for ColorType","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for BitDepth","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Unit","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for DisposeOp","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for BlendOp","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Transformations","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for OutputInfo","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for FilterType","synthetic":false,"types":[]}];
implementors["tiff"] = [{"text":"impl StructuralPartialEq for Value","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TiffFormatError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for InflateError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TiffUnsupportedError","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Tag","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Type","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for CompressionMethod","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for PhotometricInterpretation","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for PlanarConfiguration","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Predictor","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ResolutionUnit","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SampleFormat","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ColorType","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()