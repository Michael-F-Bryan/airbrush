(function() {var implementors = {};
implementors["adler"] = [{"text":"impl Default for Adler32","synthetic":false,"types":[]}];
implementors["adler32"] = [{"text":"impl Default for RollingAdler32","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Default for BigEndian","synthetic":false,"types":[]},{"text":"impl Default for LittleEndian","synthetic":false,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Default for Hasher","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;'a&gt; Default for Select&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; Default for Injector&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?Sized + Pointable&gt; Default for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Pointable&gt; Default for Shared&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Collector","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Backoff","synthetic":false,"types":[]},{"text":"impl Default for Parker","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for ShardedLock&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for WaitGroup","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl Default for Compression","synthetic":false,"types":[]},{"text":"impl Default for SpecialOptions","synthetic":false,"types":[]},{"text":"impl Default for CompressionOptions","synthetic":false,"types":[]}];
implementors["euclid"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for Angle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Length&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Point2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Point3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Rect&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, Src, Dst&gt; Default for Scale&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for SideOffsets2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Size2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Size3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Default for Transform2D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Zero + One,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Default for Transform3D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Zero + One,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Default for Translation2D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Zero,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Default for Translation3D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Zero,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Vector2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Vector3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl Default for UnknownUnit","synthetic":false,"types":[]}];
implementors["gif"] = [{"text":"impl&lt;'a&gt; Default for Frame&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["image"] = [{"text":"impl Default for Rgbe8Pixel","synthetic":false,"types":[]},{"text":"impl Default for PixelDensity","synthetic":false,"types":[]},{"text":"impl Default for CompressionType","synthetic":false,"types":[]},{"text":"impl Default for FilterType","synthetic":false,"types":[]},{"text":"impl Default for Frame","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Default for CompressorOxide","synthetic":false,"types":[]},{"text":"impl Default for DecompressorOxide","synthetic":false,"types":[]},{"text":"impl Default for InflateState","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Default for FrameControl","synthetic":false,"types":[]},{"text":"impl Default for Info","synthetic":false,"types":[]},{"text":"impl Default for StreamingDecoder","synthetic":false,"types":[]},{"text":"impl Default for Limits","synthetic":false,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Default for ThreadPoolBuilder","synthetic":false,"types":[]},{"text":"impl Default for Configuration","synthetic":false,"types":[]}];
implementors["tiff"] = [{"text":"impl Default for Limits","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()